import pandas

from .writer import Writer
from ..data_structure import DataStructure

HEADER = ['index', 'Access Gained', 'Attack Origin', 'Authentication Required', 'Availability', 'CVE ID',
          'CVE Page', 'CWE ID', 'Complexity', 'Confidentiality', 'Integrity', 'Known Exploits', 'Publish Date',
          'Score', 'Summary', 'Update Date', 'Vulnerability Classification', 'add_lines', 'codeLink', 'commit_id',
          'commit_message', 'del_lines', 'file_name', 'files_changed', 'func_after', 'func_before', 'lang',
          'lines_after',
          'lines_before', 'parentID', 'patch', 'project', 'project_after', 'project_before', 'target',
          'vul_func_with_fix', 'processed_func', 'flaw_line', 'flaw_line_index']


class BigVulWriter(Writer):
    def write_file(self):
        with open(self.file_path, 'w') as output_file:
            for n, element in enumerate(self.reader.read_file()):
                field = self.convert_to_big_vul(element)
                if n == 0:
                    field.to_csv(output_file, header=HEADER, index=False)
                else:
                    field.to_csv(output_file, header=False, index=False)

    def convert_to_big_vul(self, field: DataStructure) -> pandas.DataFrame:
        data_dict = dict(
            zip(HEADER, [[field.index], [field.access_gained], [field.attack_origin], [field.authentication_required],
                         [field.availability], [field.cve_id], [field.cve_page], [field.cwe_id], [field.complexity],
                         [field.confidentiality], [field.integrity], [field.known_exploits], [field.publish_date],
                         [field.score], [field.summary], [field.update_date],
                         [field.vulnerability_classification],
                         [field.add_lines], [field.codeLink], [field.commit_id], [field.commit_message],
                         [field.del_lines], [field.file_name], [field.files_changed], [field.func_after],
                         [field.func_before], [field.lang], [field.lines_after], [field.lines_before],
                         [field.parentID], [field.patch], [field.project], [field.project_after],
                         [field.project_before], [field.target], [field.vul_func_with_fix], [field.processed_func],
                         [field.flaw_line], [field.flaw_line_index]]))
        return pandas.DataFrame.from_dict(data_dict)
